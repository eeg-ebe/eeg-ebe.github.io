// Generated by Haxe 3.4.7
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var CoMa = function() { };
$hxClasses["CoMa"] = CoMa;
CoMa.__name__ = ["CoMa"];
CoMa.cToCol = function(v,maxV,minV) {
	var divVal = maxV != minV ? maxV - minV : 0.01;
	var h = (240. - (v - minV) / divVal * -120.0) % 360;
	var s = 0.5;
	var l = 0.5;
	var r = -1;
	var g = -1;
	var b = -1;
	var c = (1 - Math.abs(l * 2 - 1)) * s;
	var h_ = h / 60;
	var x = c * (1 - Math.abs(h_ % 2 - 1));
	var m = l - c / 2;
	if(0 <= h_ && h_ <= 1) {
		r = c;
		g = x;
		b = 0;
	} else if(1 <= h_ && h_ <= 2) {
		r = x;
		g = c;
		b = 0;
	} else if(2 <= h_ && h_ <= 3) {
		r = 0;
		g = c;
		b = x;
	} else if(3 <= h_ && h_ <= 4) {
		r = 0;
		g = x;
		b = c;
	} else if(4 <= h_ && h_ <= 5) {
		r = x;
		g = 0;
		b = c;
	} else if(5 <= h_ && h_ <= 6) {
		r = c;
		g = 0;
		b = x;
	}
	r = (r + m) * 256;
	g = (g + m) * 256;
	b = (b + m) * 256;
	return "rgb(" + (r | 0) + "," + (g | 0) + "," + (b | 0) + ")";
};
CoMa.runComaJS = function(a,printer,printer2,printer3,namesOfMarkerFiles,runComaFromPartition) {
	var l = new List();
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		l.add(parsing_LstParser.parseLst(a[i]));
	}
	CoMa.runComa(l,printer,printer2,printer3,namesOfMarkerFiles,runComaFromPartition);
};
CoMa.runComa = function(l,printer,printer2,printer3,namesOfMarkerFiles,compStrategy) {
	var comaIndL = new List();
	var index = 0;
	var _g_head = l.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var lp = val;
		var _g_head1 = lp.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var p = val1;
			var found = false;
			var _g_head2 = comaIndL.h;
			while(_g_head2 != null) {
				var val2 = _g_head2.item;
				_g_head2 = _g_head2.next;
				var comaInd = val2;
				if(comaInd.indName == p.first) {
					comaInd.setSpResultOf(index,Std.parseInt(p.second));
					found = true;
					break;
				}
			}
			if(!found) {
				var newCoMaInd = new CoMaInd(p.first,l.length);
				newCoMaInd.setSpResultOf(index,Std.parseInt(p.second));
				comaIndL.add(newCoMaInd);
			}
		}
		++index;
	}
	printer3.printString("Individual");
	var _g1 = 0;
	var _g = comaIndL.first().vals.length;
	while(_g1 < _g) {
		var i = _g1++;
		printer3.printString("\t");
		printer3.printString(namesOfMarkerFiles[i]);
	}
	printer3.printString("\n");
	var _g_head3 = comaIndL.h;
	while(_g_head3 != null) {
		var val3 = _g_head3.item;
		_g_head3 = _g_head3.next;
		var ind = val3;
		printer3.printString(ind.indName);
		var _g2 = 0;
		var _g11 = ind.vals;
		while(_g2 < _g11.length) {
			var val4 = _g11[_g2];
			++_g2;
			printer3.printString("\t" + val4);
		}
		printer3.printString("\n");
	}
	printer3.close();
	CoMa.runComaFromPartition(new util_Pair(comaIndL,null),printer,printer2,compStrategy);
};
CoMa.runComaFromPartition = function(comaIndLP,printer,printer2,compStrategy) {
	var comaIndL = comaIndLP.first;
	var weights = comaIndLP.second;
	var orderedL = new List();
	var highestVal = -Infinity;
	var lowestVal = Infinity;
	if(compStrategy < -1) {
		compStrategy += 5;
		orderedL = comaIndL;
		var _g_head = orderedL.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var e1 = val;
			var _g_head1 = orderedL.h;
			while(_g_head1 != null) {
				var val1 = _g_head1.item;
				_g_head1 = _g_head1.next;
				var e2 = val1;
				var dist = e1.compare(e2,weights,compStrategy);
				highestVal = Math.max(highestVal,dist);
				lowestVal = Math.min(lowestVal,dist);
			}
		}
	} else if(comaIndL.length == 0) {
		highestVal = 0;
		lowestVal = 0;
	} else if(comaIndL.length == 1) {
		orderedL.add(comaIndL.pop());
		highestVal = 0;
		lowestVal = 0;
	} else if(comaIndL.length == 2) {
		orderedL.add(comaIndL.pop());
		orderedL.add(comaIndL.pop());
		highestVal = orderedL.first().compare(orderedL.last(),weights,compStrategy);
		lowestVal = highestVal;
	} else {
		var bestDist = -Infinity;
		var bestE1 = null;
		var bestE2 = null;
		var _g_head2 = comaIndL.h;
		while(_g_head2 != null) {
			var val2 = _g_head2.item;
			_g_head2 = _g_head2.next;
			var e11 = val2;
			var _g_head3 = comaIndL.h;
			while(_g_head3 != null) {
				var val3 = _g_head3.item;
				_g_head3 = _g_head3.next;
				var e21 = val3;
				var dist1 = e11.compare(e21,weights,compStrategy);
				if(e11 != e21) {
					if(dist1 > bestDist) {
						bestDist = dist1;
						bestE1 = e11;
						bestE2 = e21;
					}
				}
				highestVal = Math.max(highestVal,dist1);
				lowestVal = Math.min(lowestVal,dist1);
			}
		}
		comaIndL.remove(bestE1);
		comaIndL.remove(bestE2);
		orderedL.add(bestE1);
		orderedL.add(bestE2);
		while(!comaIndL.isEmpty()) {
			var bestDistFirst = -Infinity;
			var bestDistLast = -Infinity;
			var bestEFirst = null;
			var bestELast = null;
			var _g_head4 = comaIndL.h;
			while(_g_head4 != null) {
				var val4 = _g_head4.item;
				_g_head4 = _g_head4.next;
				var e = val4;
				var distFirst = e.compare(orderedL.first(),weights,compStrategy);
				var distLast = e.compare(orderedL.last(),weights,compStrategy);
				if(distFirst > bestDistFirst) {
					bestDistFirst = distFirst;
					bestEFirst = e;
				}
				if(distLast > bestDistLast) {
					bestDistLast = distLast;
					bestELast = e;
				}
			}
			if(bestDistFirst > bestDistLast) {
				comaIndL.remove(bestEFirst);
				orderedL.push(bestEFirst);
			} else {
				comaIndL.remove(bestELast);
				orderedL.add(bestELast);
			}
		}
	}
	var _g_head5 = orderedL.h;
	while(_g_head5 != null) {
		var val5 = _g_head5.item;
		_g_head5 = _g_head5.next;
		var e3 = val5;
		printer2.printString("\t" + e3.indName);
	}
	printer2.printString("\n");
	var _g_head6 = orderedL.h;
	while(_g_head6 != null) {
		var val6 = _g_head6.item;
		_g_head6 = _g_head6.next;
		var e12 = val6;
		printer2.printString(e12.indName);
		var _g_head7 = orderedL.h;
		while(_g_head7 != null) {
			var val7 = _g_head7.item;
			_g_head7 = _g_head7.next;
			var e22 = val7;
			var dist2 = e12.compare(e22,weights,compStrategy);
			printer2.printString("\t" + dist2);
		}
		printer2.printString("\n");
	}
	var width = 100 + orderedL.length * 20 + 5;
	var height = 100 + orderedL.length * 20 + 5;
	printer.printString("<svg version=\"1.1\" baseProfile=\"full\" width=\"" + width + "\" height=\"" + height + "\" xmlns=\"http://www.w3.org/2000/svg\">");
	printer.printString("<g style=\"font-family:serif;font-size:16\">");
	var index = 0;
	var _g_head8 = orderedL.h;
	while(_g_head8 != null) {
		var val8 = _g_head8.item;
		_g_head8 = _g_head8.next;
		var e4 = val8;
		printer.printString("<text x=\"5\" y=\"" + (100 + 20 * index + 15) + "\">" + e4.indName + "</text>");
		printer.printString("<text x=\"" + (100 + 20 * index + 15) + "\" y=\"5\" transform=\"rotate(90 " + (100 + 20 * index + 7) + " 5)\">" + e4.indName + "</text>");
		++index;
	}
	printer.printString("</g>");
	var i = 0;
	var j = 0;
	var _g_head9 = orderedL.h;
	while(_g_head9 != null) {
		var val9 = _g_head9.item;
		_g_head9 = _g_head9.next;
		var e13 = val9;
		var _g_head10 = orderedL.h;
		while(_g_head10 != null) {
			var val10 = _g_head10.item;
			_g_head10 = _g_head10.next;
			var e23 = val10;
			var dist3 = e13.compare(e23,weights,compStrategy);
			printer.printString("<rect x=\"" + (100 + 20 * i) + "\" y=\"" + (100 + 20 * j) + "\" width=\"20\" height=\"20\" fill=\"" + CoMa.cToCol(dist3,highestVal,lowestVal) + "\"/>");
			++j;
		}
		j = 0;
		++i;
	}
	printer.printString("</svg>");
	printer.close();
	printer2.close();
};
CoMa.parsePartitionFile = function(fileContent) {
	var comaIndL = new List();
	var lines = StringTools.rtrim(fileContent).split("\n");
	var lineNo = 0;
	var weightLine = null;
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		++lineNo;
		var parts = line.split("\t");
		if(line == null || line == "" || lineNo == 1) {
			continue;
		}
		if(lineNo == lines.length && (parts[0] == "" || parts[0] == null)) {
			weightLine = [];
			var _g2 = 1;
			var _g1 = parts.length;
			while(_g2 < _g1) {
				var index = _g2++;
				weightLine.push(Std.parseInt(parts[index]));
			}
			continue;
		}
		var newCoMaInd = new CoMaInd(parts[0],parts.length - 1);
		var _g21 = 1;
		var _g11 = parts.length;
		while(_g21 < _g11) {
			var index1 = _g21++;
			newCoMaInd.setSpResultOf(index1 - 1,Std.parseInt(parts[index1]));
		}
		comaIndL.add(newCoMaInd);
	}
	return new util_Pair(comaIndL,weightLine);
};
CoMa.main = function() {
};
var CoMaInd = function(s,l) {
	this.indName = s;
	var this1 = new Array(l);
	this.vals = this1;
	var _g1 = 0;
	var _g = l;
	while(_g1 < _g) {
		var index = _g1++;
		this.vals[index] = -1;
	}
};
$hxClasses["CoMaInd"] = CoMaInd;
CoMaInd.__name__ = ["CoMaInd"];
CoMaInd.prototype = {
	indName: null
	,vals: null
	,setSpResultOf: function(i,sp) {
		this.vals[i] = sp;
	}
	,compare: function(other,weights,compStrategy) {
		var result = 0;
		var _g1 = 0;
		var _g = this.vals.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.vals[i] == -1 || other.vals[i] == -1) {
				continue;
			}
			if(this.vals[i] == other.vals[i]) {
				if(weights == null) {
					++result;
				} else {
					result += weights[i];
				}
			} else if(compStrategy == 0) {
				if(weights == null) {
					--result;
				} else {
					result -= weights[i];
				}
			}
		}
		return result;
	}
	,__class__: CoMaInd
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			var tmp = this.r;
			var tmp1 = len < 0 ? s : HxOverrides.substr(s,0,pos + len);
			this.r.m = tmp.exec(tmp1);
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) {
			i = 0;
		}
	}
	while(i < len) {
		if(a[i] === obj) {
			return i;
		}
		++i;
	}
	return -1;
};
HxOverrides.lastIndexOf = function(a,obj,i) {
	var len = a.length;
	if(i >= len) {
		i = len - 1;
	} else if(i < 0) {
		i += len;
	}
	while(i >= 0) {
		if(a[i] === obj) {
			return i;
		}
		--i;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,last: function() {
		if(this.q == null) {
			return null;
		} else {
			return this.q.item;
		}
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,clear: function() {
		this.h = null;
		this.q = null;
		this.length = 0;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,toString: function() {
		var s_b = "";
		var first = true;
		var l = this.h;
		s_b += "{";
		while(l != null) {
			if(first) {
				first = false;
			} else {
				s_b += ", ";
			}
			s_b += Std.string(Std.string(l.item));
			l = l.next;
		}
		s_b += "}";
		return s_b;
	}
	,join: function(sep) {
		var s_b = "";
		var first = true;
		var l = this.h;
		while(l != null) {
			if(first) {
				first = false;
			} else {
				s_b += sep == null ? "null" : "" + sep;
			}
			s_b += Std.string(l.item);
			l = l.next;
		}
		return s_b;
	}
	,filter: function(f) {
		var l2 = new List();
		var l = this.h;
		while(l != null) {
			var v = l.item;
			l = l.next;
			if(f(v)) {
				l2.add(v);
			}
		}
		return l2;
	}
	,map: function(f) {
		var b = new List();
		var l = this.h;
		while(l != null) {
			var v = l.item;
			l = l.next;
			b.add(f(v));
		}
		return b;
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.instance = function(value,c) {
	if((value instanceof c)) {
		return value;
	} else {
		return null;
	}
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,get_length: function() {
		return this.b.length;
	}
	,add: function(x) {
		this.b += Std.string(x);
	}
	,addChar: function(c) {
		this.b += String.fromCharCode(c);
	}
	,addSub: function(s,pos,len) {
		this.b += len == null ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len);
	}
	,toString: function() {
		return this.b;
	}
	,__class__: StringBuf
	,__properties__: {get_length:"get_length"}
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.htmlUnescape = function(s) {
	return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
StringTools.isEof = function(c) {
	return c != c;
};
StringTools.quoteUnixArg = function(argument) {
	if(argument == "") {
		return "''";
	}
	if(!new EReg("[^a-zA-Z0-9_@%+=:,./-]","").match(argument)) {
		return argument;
	}
	return "'" + StringTools.replace(argument,"'","'\"'\"'") + "'";
};
StringTools.quoteWinArg = function(argument,escapeMetaCharacters) {
	if(!new EReg("^[^ \t\\\\\"]+$","").match(argument)) {
		var result_b = "";
		var needquote = argument.indexOf(" ") != -1 || argument.indexOf("\t") != -1 || argument == "";
		if(needquote) {
			result_b += "\"";
		}
		var bs_buf = new StringBuf();
		var _g1 = 0;
		var _g = argument.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g2 = HxOverrides.cca(argument,i);
			if(_g2 == null) {
				var c = _g2;
				if(bs_buf.b.length > 0) {
					result_b += Std.string(bs_buf.b);
					bs_buf = new StringBuf();
				}
				result_b += String.fromCharCode(c);
			} else {
				switch(_g2) {
				case 34:
					var bs = bs_buf.b;
					result_b += bs == null ? "null" : "" + bs;
					result_b += bs == null ? "null" : "" + bs;
					bs_buf = new StringBuf();
					result_b += "\\\"";
					break;
				case 92:
					bs_buf.b += "\\";
					break;
				default:
					var c1 = _g2;
					if(bs_buf.b.length > 0) {
						result_b += Std.string(bs_buf.b);
						bs_buf = new StringBuf();
					}
					result_b += String.fromCharCode(c1);
				}
			}
		}
		result_b += Std.string(bs_buf.b);
		if(needquote) {
			result_b += Std.string(bs_buf.b);
			result_b += "\"";
		}
		argument = result_b;
	}
	if(escapeMetaCharacters) {
		var result_b1 = "";
		var _g11 = 0;
		var _g3 = argument.length;
		while(_g11 < _g3) {
			var i1 = _g11++;
			var c2 = HxOverrides.cca(argument,i1);
			if(StringTools.winMetaCharacters.indexOf(c2) >= 0) {
				result_b1 += "^";
			}
			result_b1 += String.fromCharCode(c2);
		}
		return result_b1;
	} else {
		return argument;
	}
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClass = function(o) {
	if(o == null) {
		return null;
	} else {
		return js_Boot.getClass(o);
	}
};
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
Type.getEnumConstructs = function(e) {
	return e.__constructs__.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		if(a[0] != b[0]) {
			return false;
		}
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) {
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			return false;
		}
	} catch( e1 ) {
		return false;
	}
	return true;
};
Type.enumConstructor = function(e) {
	return e[0];
};
Type.enumParameters = function(e) {
	return e.slice(2);
};
Type.enumIndex = function(e) {
	return e[1];
};
Type.allEnums = function(e) {
	return e.__empty_constructs__;
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,toString: null
	,__class__: haxe_IMap
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
haxe_Log.clear = function() {
	js_Boot.__clear_trace();
};
var haxe_ds__$Vector_Vector_$Impl_$ = {};
$hxClasses["haxe.ds._Vector.Vector_Impl_"] = haxe_ds__$Vector_Vector_$Impl_$;
haxe_ds__$Vector_Vector_$Impl_$.__name__ = ["haxe","ds","_Vector","Vector_Impl_"];
haxe_ds__$Vector_Vector_$Impl_$.__properties__ = {get_length:"get_length"};
haxe_ds__$Vector_Vector_$Impl_$._new = function(length) {
	var this1 = new Array(length);
	return this1;
};
haxe_ds__$Vector_Vector_$Impl_$.get = function(this1,index) {
	return this1[index];
};
haxe_ds__$Vector_Vector_$Impl_$.set = function(this1,index,val) {
	return this1[index] = val;
};
haxe_ds__$Vector_Vector_$Impl_$.get_length = function(this1) {
	return this1.length;
};
haxe_ds__$Vector_Vector_$Impl_$.blit = function(src,srcPos,dest,destPos,len) {
	if(src == dest) {
		if(srcPos < destPos) {
			var i = srcPos + len;
			var j = destPos + len;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var k = _g1++;
				--i;
				--j;
				src[j] = src[i];
			}
		} else if(srcPos > destPos) {
			var i1 = srcPos;
			var j1 = destPos;
			var _g11 = 0;
			var _g2 = len;
			while(_g11 < _g2) {
				var k1 = _g11++;
				src[j1] = src[i1];
				++i1;
				++j1;
			}
		}
	} else {
		var _g12 = 0;
		var _g3 = len;
		while(_g12 < _g3) {
			var i2 = _g12++;
			dest[destPos + i2] = src[srcPos + i2];
		}
	}
};
haxe_ds__$Vector_Vector_$Impl_$.toArray = function(this1) {
	return this1.slice(0);
};
haxe_ds__$Vector_Vector_$Impl_$.toData = function(this1) {
	return this1;
};
haxe_ds__$Vector_Vector_$Impl_$.fromData = function(data) {
	return data;
};
haxe_ds__$Vector_Vector_$Impl_$.fromArrayCopy = function(array) {
	return array.slice(0);
};
haxe_ds__$Vector_Vector_$Impl_$.copy = function(this1) {
	var length = this1.length;
	var this2 = new Array(length);
	var r = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1,0,r,0,this1.length);
	return r;
};
haxe_ds__$Vector_Vector_$Impl_$.join = function(this1,sep) {
	var b_b = "";
	var i = 0;
	var len = this1.length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i1 = _g1++;
		b_b += Std.string(Std.string(this1[i1]));
		if(i1 < len - 1) {
			b_b += sep == null ? "null" : "" + sep;
		}
	}
	return b_b;
};
haxe_ds__$Vector_Vector_$Impl_$.map = function(this1,f) {
	var length = this1.length;
	var this2 = new Array(length);
	var r = this2;
	var i = 0;
	var len = length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i1 = _g1++;
		var v = f(this1[i1]);
		r[i1] = v;
	}
	return r;
};
haxe_ds__$Vector_Vector_$Impl_$.sort = function(this1,f) {
	this1.sort(f);
};
var interfaces_Printer = function() {
	this.indent = "  ";
	this.newline = "\n";
	this.countingOffset = 1;
};
$hxClasses["interfaces.Printer"] = interfaces_Printer;
interfaces_Printer.__name__ = ["interfaces","Printer"];
interfaces_Printer.prototype = {
	countingOffset: null
	,newline: null
	,indent: null
	,printString: null
	,close: null
	,__class__: interfaces_Printer
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.__clear_trace = function() {
	var d = document.getElementById("haxe:trace");
	if(d != null) {
		d.innerHTML = "";
	}
};
js_Boot.isClass = function(o) {
	return o.__name__;
};
js_Boot.isEnum = function(e) {
	return e.__ename__;
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Lib = function() { };
$hxClasses["js.Lib"] = js_Lib;
js_Lib.__name__ = ["js","Lib"];
js_Lib.__properties__ = {get_undefined:"get_undefined"};
js_Lib.debug = function() {
	debugger;
};
js_Lib.alert = function(v) {
	alert(js_Boot.__string_rec(v,""));
};
js_Lib["eval"] = function(code) {
	return eval(code);
};
js_Lib.get_undefined = function() {
	return undefined;
};
var parsing_LstParser = function() { };
$hxClasses["parsing.LstParser"] = parsing_LstParser;
parsing_LstParser.__name__ = ["parsing","LstParser"];
parsing_LstParser.parseLst = function(fileContent) {
	var result = new List();
	var lines = fileContent.split("\n");
	var lineNo = 0;
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		++lineNo;
		var tmp;
		var tmp1;
		if(line != null) {
			var end = line.length;
			while(true) {
				var tmp2;
				if(end > 0) {
					var cCode = HxOverrides.cca(line,end - 1);
					var result1 = false;
					var _g1 = 0;
					var _g11 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
					while(_g1 < _g11.length) {
						var ele = _g11[_g1];
						++_g1;
						if(ele == cCode) {
							result1 = true;
							break;
						}
					}
					tmp2 = result1;
				} else {
					tmp2 = false;
				}
				if(!tmp2) {
					break;
				}
				--end;
			}
			var s = line.substring(0,end);
			var begin = 0;
			var sLen = s.length;
			while(true) {
				var tmp3;
				if(begin < sLen) {
					var cCode1 = HxOverrides.cca(s,begin);
					var result2 = false;
					var _g2 = 0;
					var _g12 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
					while(_g2 < _g12.length) {
						var ele1 = _g12[_g2];
						++_g2;
						if(ele1 == cCode1) {
							result2 = true;
							break;
						}
					}
					tmp3 = result2;
				} else {
					tmp3 = false;
				}
				if(!tmp3) {
					break;
				}
				++begin;
			}
			tmp1 = HxOverrides.substr(s,begin,null) == "";
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			tmp = line.charAt(0) == "#";
		} else {
			tmp = true;
		}
		if(tmp) {
			continue;
		}
		var pos = line.lastIndexOf("\t");
		if(pos == -1) {
			throw new js__$Boot_HaxeError("Missing tab character in line " + lineNo);
		}
		var name = line.substring(0,pos);
		var end1 = name.length;
		while(true) {
			var name1;
			if(end1 > 0) {
				var cCode2 = HxOverrides.cca(name,end1 - 1);
				var result3 = false;
				var _g3 = 0;
				var _g13 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
				while(_g3 < _g13.length) {
					var ele2 = _g13[_g3];
					++_g3;
					if(ele2 == cCode2) {
						result3 = true;
						break;
					}
				}
				name1 = result3;
			} else {
				name1 = false;
			}
			if(!name1) {
				break;
			}
			--end1;
		}
		var s1 = name.substring(0,end1);
		var begin1 = 0;
		var sLen1 = s1.length;
		while(true) {
			var name2;
			if(begin1 < sLen1) {
				var cCode3 = HxOverrides.cca(s1,begin1);
				var result4 = false;
				var _g4 = 0;
				var _g14 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
				while(_g4 < _g14.length) {
					var ele3 = _g14[_g4];
					++_g4;
					if(ele3 == cCode3) {
						result4 = true;
						break;
					}
				}
				name2 = result4;
			} else {
				name2 = false;
			}
			if(!name2) {
				break;
			}
			++begin1;
		}
		name = HxOverrides.substr(s1,begin1,null);
		var chr = line.substring(pos + 1);
		var end2 = chr.length;
		while(true) {
			var chr1;
			if(end2 > 0) {
				var cCode4 = HxOverrides.cca(chr,end2 - 1);
				var result5 = false;
				var _g5 = 0;
				var _g15 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
				while(_g5 < _g15.length) {
					var ele4 = _g15[_g5];
					++_g5;
					if(ele4 == cCode4) {
						result5 = true;
						break;
					}
				}
				chr1 = result5;
			} else {
				chr1 = false;
			}
			if(!chr1) {
				break;
			}
			--end2;
		}
		var s2 = chr.substring(0,end2);
		var begin2 = 0;
		var sLen2 = s2.length;
		while(true) {
			var chr2;
			if(begin2 < sLen2) {
				var cCode5 = HxOverrides.cca(s2,begin2);
				var result6 = false;
				var _g6 = 0;
				var _g16 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
				while(_g6 < _g16.length) {
					var ele5 = _g16[_g6];
					++_g6;
					if(ele5 == cCode5) {
						result6 = true;
						break;
					}
				}
				chr2 = result6;
			} else {
				chr2 = false;
			}
			if(!chr2) {
				break;
			}
			++begin2;
		}
		chr = HxOverrides.substr(s2,begin2,null);
		if(name == null || name == "" || chr == null || chr == "") {
			throw new js__$Boot_HaxeError("Error in line " + lineNo);
		}
		result.add(new util_Pair(name,chr));
	}
	return result;
};
parsing_LstParser.isValidColor = function(s) {
	if(s == null || s == "") {
		return false;
	}
	s = s.toUpperCase();
	if(s.charAt(0) == "#") {
		if(s.length != 4 && s.length != 7) {
			return false;
		}
		var _g1 = 1;
		var _g = s.length;
		while(_g1 < _g) {
			var i = _g1++;
			var character = s.charAt(i);
			if(character != "0" && character != "1" && character != "2" && character != "3" && character != "4" && character != "5" && character != "6" && character != "7" && character != "8" && character != "9" && character != "A" && character != "B" && character != "C" && character != "D" && character != "E" && character != "F") {
				return false;
			}
		}
		return true;
	} else {
		if(s == "ALICEBLUE") {
			return true;
		}
		if(s == "ANTIQUEWHITE") {
			return true;
		}
		if(s == "AQUA") {
			return true;
		}
		if(s == "AQUAMARINE") {
			return true;
		}
		if(s == "AZURE") {
			return true;
		}
		if(s == "BEIGE") {
			return true;
		}
		if(s == "BISQUE") {
			return true;
		}
		if(s == "BLACK") {
			return true;
		}
		if(s == "BLANCHEDALMOND") {
			return true;
		}
		if(s == "BLUE") {
			return true;
		}
		if(s == "BLUEVIOLET") {
			return true;
		}
		if(s == "BROWN") {
			return true;
		}
		if(s == "BURLYWOOD") {
			return true;
		}
		if(s == "CADETBLUE") {
			return true;
		}
		if(s == "CHARTREUSE") {
			return true;
		}
		if(s == "CHOCOLATE") {
			return true;
		}
		if(s == "CORAL") {
			return true;
		}
		if(s == "CORNFLOWERBLUE") {
			return true;
		}
		if(s == "CORNSILK") {
			return true;
		}
		if(s == "CRIMSON") {
			return true;
		}
		if(s == "CYAN") {
			return true;
		}
		if(s == "DARKBLUE") {
			return true;
		}
		if(s == "DARKCYAN") {
			return true;
		}
		if(s == "DARKGOLDENROD") {
			return true;
		}
		if(s == "DARKGRAY") {
			return true;
		}
		if(s == "DARKGREY") {
			return true;
		}
		if(s == "DARKGREEN") {
			return true;
		}
		if(s == "DARKKHAKI") {
			return true;
		}
		if(s == "DARKMAGENTA") {
			return true;
		}
		if(s == "DARKOLIVEGREEN") {
			return true;
		}
		if(s == "DARKORANGE") {
			return true;
		}
		if(s == "DARKORCHID") {
			return true;
		}
		if(s == "DARKRED") {
			return true;
		}
		if(s == "DARKSALMON") {
			return true;
		}
		if(s == "DARKSEAGREEN") {
			return true;
		}
		if(s == "DARKSLATEBLUE") {
			return true;
		}
		if(s == "DARKSLATEGRAY") {
			return true;
		}
		if(s == "DARKSLATEGREY") {
			return true;
		}
		if(s == "DARKTURQUOISE") {
			return true;
		}
		if(s == "DARKVIOLET") {
			return true;
		}
		if(s == "DEEPPINK") {
			return true;
		}
		if(s == "DEEPSKYBLUE") {
			return true;
		}
		if(s == "DIMGRAY") {
			return true;
		}
		if(s == "DIMGREY") {
			return true;
		}
		if(s == "DODGERBLUE") {
			return true;
		}
		if(s == "FIREBRICK") {
			return true;
		}
		if(s == "FLORALWHITE") {
			return true;
		}
		if(s == "FORESTGREEN") {
			return true;
		}
		if(s == "FUCHSIA") {
			return true;
		}
		if(s == "GAINSBORO") {
			return true;
		}
		if(s == "GHOSTWHITE") {
			return true;
		}
		if(s == "GOLD") {
			return true;
		}
		if(s == "GOLDENROD") {
			return true;
		}
		if(s == "GRAY") {
			return true;
		}
		if(s == "GREY") {
			return true;
		}
		if(s == "GREEN") {
			return true;
		}
		if(s == "GREENYELLOW") {
			return true;
		}
		if(s == "HONEYDEW") {
			return true;
		}
		if(s == "HOTPINK") {
			return true;
		}
		if(s == "INDIANRED") {
			return true;
		}
		if(s == "INDIGO") {
			return true;
		}
		if(s == "IVORY") {
			return true;
		}
		if(s == "KHAKI") {
			return true;
		}
		if(s == "LAVENDER") {
			return true;
		}
		if(s == "LAVENDERBLUSH") {
			return true;
		}
		if(s == "LAWNGREEN") {
			return true;
		}
		if(s == "LEMONCHIFFON") {
			return true;
		}
		if(s == "LIGHTBLUE") {
			return true;
		}
		if(s == "LIGHTCORAL") {
			return true;
		}
		if(s == "LIGHTCYAN") {
			return true;
		}
		if(s == "LIGHTGOLDENRODYELLOW") {
			return true;
		}
		if(s == "LIGHTGRAY") {
			return true;
		}
		if(s == "LIGHTGREY") {
			return true;
		}
		if(s == "LIGHTGREEN") {
			return true;
		}
		if(s == "LIGHTPINK") {
			return true;
		}
		if(s == "LIGHTSALMON") {
			return true;
		}
		if(s == "LIGHTSEAGREEN") {
			return true;
		}
		if(s == "LIGHTSKYBLUE") {
			return true;
		}
		if(s == "LIGHTSLATEGRAY") {
			return true;
		}
		if(s == "LIGHTSLATEGREY") {
			return true;
		}
		if(s == "LIGHTSTEELBLUE") {
			return true;
		}
		if(s == "LIGHTYELLOW") {
			return true;
		}
		if(s == "LIME") {
			return true;
		}
		if(s == "LIMEGREEN") {
			return true;
		}
		if(s == "LINEN") {
			return true;
		}
		if(s == "MAGENTA") {
			return true;
		}
		if(s == "MAROON") {
			return true;
		}
		if(s == "MEDIUMAQUAMARINE") {
			return true;
		}
		if(s == "MEDIUMBLUE") {
			return true;
		}
		if(s == "MEDIUMORCHID") {
			return true;
		}
		if(s == "MEDIUMPURPLE") {
			return true;
		}
		if(s == "MEDIUMSEAGREEN") {
			return true;
		}
		if(s == "MEDIUMSLATEBLUE") {
			return true;
		}
		if(s == "MEDIUMSPRINGGREEN") {
			return true;
		}
		if(s == "MEDIUMTURQUOISE") {
			return true;
		}
		if(s == "MEDIUMVIOLETRED") {
			return true;
		}
		if(s == "MIDNIGHTBLUE") {
			return true;
		}
		if(s == "MINTCREAM") {
			return true;
		}
		if(s == "MISTYROSE") {
			return true;
		}
		if(s == "MOCCASIN") {
			return true;
		}
		if(s == "NAVAJOWHITE") {
			return true;
		}
		if(s == "NAVY") {
			return true;
		}
		if(s == "OLDLACE") {
			return true;
		}
		if(s == "OLIVE") {
			return true;
		}
		if(s == "OLIVEDRAB") {
			return true;
		}
		if(s == "ORANGE") {
			return true;
		}
		if(s == "ORANGERED") {
			return true;
		}
		if(s == "ORCHID") {
			return true;
		}
		if(s == "PALEGOLDENROD") {
			return true;
		}
		if(s == "PALEGREEN") {
			return true;
		}
		if(s == "PALETURQUOISE") {
			return true;
		}
		if(s == "PALEVIOLETRED") {
			return true;
		}
		if(s == "PAPAYAWHIP") {
			return true;
		}
		if(s == "PEACHPUFF") {
			return true;
		}
		if(s == "PERU") {
			return true;
		}
		if(s == "PINK") {
			return true;
		}
		if(s == "PLUM") {
			return true;
		}
		if(s == "POWDERBLUE") {
			return true;
		}
		if(s == "PURPLE") {
			return true;
		}
		if(s == "REBECCAPURPLE") {
			return true;
		}
		if(s == "RED") {
			return true;
		}
		if(s == "ROSYBROWN") {
			return true;
		}
		if(s == "ROYALBLUE") {
			return true;
		}
		if(s == "SADDLEBROWN") {
			return true;
		}
		if(s == "SALMON") {
			return true;
		}
		if(s == "SANDYBROWN") {
			return true;
		}
		if(s == "SEAGREEN") {
			return true;
		}
		if(s == "SEASHELL") {
			return true;
		}
		if(s == "SIENNA") {
			return true;
		}
		if(s == "SILVER") {
			return true;
		}
		if(s == "SKYBLUE") {
			return true;
		}
		if(s == "SLATEBLUE") {
			return true;
		}
		if(s == "SLATEGRAY") {
			return true;
		}
		if(s == "SLATEGREY") {
			return true;
		}
		if(s == "SNOW") {
			return true;
		}
		if(s == "SPRINGGREEN") {
			return true;
		}
		if(s == "STEELBLUE") {
			return true;
		}
		if(s == "TAN") {
			return true;
		}
		if(s == "TEAL") {
			return true;
		}
		if(s == "THISTLE") {
			return true;
		}
		if(s == "TOMATO") {
			return true;
		}
		if(s == "TURQUOISE") {
			return true;
		}
		if(s == "VIOLET") {
			return true;
		}
		if(s == "WHEAT") {
			return true;
		}
		if(s == "WHITE") {
			return true;
		}
		if(s == "WHITESMOKE") {
			return true;
		}
		if(s == "YELLOW") {
			return true;
		}
		if(s == "YELLOWGREEN") {
			return true;
		}
	}
	return false;
};
parsing_LstParser.parseColorList = function(fileContent) {
	var result = parsing_LstParser.parseLst(fileContent);
	var lst = new List();
	var _g_head = result.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var pair = val;
		pair.second = StringTools.trim(pair.second);
		if(!parsing_LstParser.isValidColor(pair.second)) {
			lst.add(pair.second);
		}
	}
	if(!lst.isEmpty()) {
		throw new js__$Boot_HaxeError("Invalid color(s) " + lst.join(","));
	}
	return result;
};
var parsing_Parse = function() { };
$hxClasses["parsing.Parse"] = parsing_Parse;
parsing_Parse.__name__ = ["parsing","Parse"];
parsing_Parse.startsWith = function(t,s) {
	return HxOverrides.substr(t,0,s.length) == s;
};
parsing_Parse.isWhitespace = function(s,pos) {
	var cCode = HxOverrides.cca(s,pos);
	var result = false;
	var _g = 0;
	var _g1 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
	while(_g < _g1.length) {
		var ele = _g1[_g];
		++_g;
		if(ele == cCode) {
			result = true;
			break;
		}
	}
	return result;
};
parsing_Parse.stripStringBegin = function(s) {
	var begin = 0;
	var sLen = s.length;
	while(true) {
		var tmp;
		if(begin < sLen) {
			var cCode = HxOverrides.cca(s,begin);
			var result = false;
			var _g = 0;
			var _g1 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
			while(_g < _g1.length) {
				var ele = _g1[_g];
				++_g;
				if(ele == cCode) {
					result = true;
					break;
				}
			}
			tmp = result;
		} else {
			tmp = false;
		}
		if(!tmp) {
			break;
		}
		++begin;
	}
	return HxOverrides.substr(s,begin,null);
};
parsing_Parse.stripStringEnd = function(s) {
	var end = s.length;
	while(true) {
		var tmp;
		if(end > 0) {
			var cCode = HxOverrides.cca(s,end - 1);
			var result = false;
			var _g = 0;
			var _g1 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
			while(_g < _g1.length) {
				var ele = _g1[_g];
				++_g;
				if(ele == cCode) {
					result = true;
					break;
				}
			}
			tmp = result;
		} else {
			tmp = false;
		}
		if(!tmp) {
			break;
		}
		--end;
	}
	return s.substring(0,end);
};
parsing_Parse.stripString = function(s) {
	var end = s.length;
	while(true) {
		var tmp;
		if(end > 0) {
			var cCode = HxOverrides.cca(s,end - 1);
			var result = false;
			var _g = 0;
			var _g1 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
			while(_g < _g1.length) {
				var ele = _g1[_g];
				++_g;
				if(ele == cCode) {
					result = true;
					break;
				}
			}
			tmp = result;
		} else {
			tmp = false;
		}
		if(!tmp) {
			break;
		}
		--end;
	}
	var s1 = s.substring(0,end);
	var begin = 0;
	var sLen = s1.length;
	while(true) {
		var tmp1;
		if(begin < sLen) {
			var cCode1 = HxOverrides.cca(s1,begin);
			var result1 = false;
			var _g2 = 0;
			var _g11 = [9,10,11,12,13,32,133,160,5760,8192,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288,6158,8203,8204,8205,8288,65279];
			while(_g2 < _g11.length) {
				var ele1 = _g11[_g2];
				++_g2;
				if(ele1 == cCode1) {
					result1 = true;
					break;
				}
			}
			tmp1 = result1;
		} else {
			tmp1 = false;
		}
		if(!tmp1) {
			break;
		}
		++begin;
	}
	return HxOverrides.substr(s1,begin,null);
};
var util_NullPrinter = function() {
	this.indent = "  ";
	this.newline = "\n";
	this.countingOffset = 1;
};
$hxClasses["util.NullPrinter"] = util_NullPrinter;
util_NullPrinter.__name__ = ["util","NullPrinter"];
util_NullPrinter.__interfaces__ = [interfaces_Printer];
util_NullPrinter.prototype = {
	countingOffset: null
	,newline: null
	,indent: null
	,printString: function(s) {
	}
	,close: function() {
	}
	,__class__: util_NullPrinter
};
var util_Pair = function(u,v) {
	this.second = null;
	this.first = null;
	this.first = u;
	this.second = v;
};
$hxClasses["util.Pair"] = util_Pair;
util_Pair.__name__ = ["util","Pair"];
util_Pair.prototype = {
	first: null
	,second: null
	,swapFirst: function(p) {
		var tmp = this.first;
		this.first = p.first;
		p.first = tmp;
	}
	,swapSecond: function(p) {
		var tmp = this.second;
		this.second = p.second;
		p.second = tmp;
	}
	,swap: function(p) {
		this.swapFirst(p);
		this.swapSecond(p);
	}
	,__class__: util_Pair
};
var util_StdOutPrinter = function() {
	this.indent = "  ";
	this.newline = "\n";
	this.countingOffset = 1;
};
$hxClasses["util.StdOutPrinter"] = util_StdOutPrinter;
util_StdOutPrinter.__name__ = ["util","StdOutPrinter"];
util_StdOutPrinter.__interfaces__ = [interfaces_Printer];
util_StdOutPrinter.prototype = {
	countingOffset: null
	,newline: null
	,indent: null
	,printString: function(s) {
		haxe_Log.trace(s,{ fileName : "StdOutPrinter.hx", lineNumber : 15, className : "util.StdOutPrinter", methodName : "printString"});
	}
	,close: function() {
	}
	,__class__: util_StdOutPrinter
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
function $arrayPush(x) { this.push(x); }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var Void = $hxClasses["Void"] = { __ename__ : ["Void"]};
StringTools.winMetaCharacters = [32,40,41,37,33,94,34,60,62,38,124,10,13,44,59];
js_Boot.__toStr = ({ }).toString;
